- platform: speedtest 
  monitored_conditions:
    - download
  minute:
    - 1

- platform: darksky
  api_key: !secret darksky_key
  monitored_conditions:
    - summary
    - apparent_temperature

- platform: systemmonitor
  name: pi_status
  resources:
    - type: disk_use_percent
      arg: /
    - type: disk_use_percent
      arg: /mnt
    - type: memory_use_percent
    - type: since_last_boot
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: process
      arg: transmission-daemon
    - type: process
      arg: Plex Media Server
    - type: process
      arg: pure-ftpd
    - type: process
      arg: openvpn
    - type: process
      arg: homebridge

- platform: template
  sensors:
    fibaro_office_battery_level:
      unit_of_measurement: '%'
      value_template: "{{ states.zwave.office.attributes.battery_level | default(0) | int }}"
      icon_template: >
        {% set battery_level = states.zwave.office.attributes.battery_level | default(0) | int %}
        {% set battery_round = (battery_level / 10) |int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}
    fibaro_thomas_battery_level:
      unit_of_measurement: '%'
      value_template: "{{ states.zwave.thomas.attributes.battery_level  | default(0) | int  }}"
      icon_template: >
        {% set battery_level = states.zwave.thomas.attributes.battery_level | default(0) | int %}
        {% set battery_round = (battery_level / 10) |int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}
    lights_on_count:
      friendly_name: 'Lights On'
      value_template: >
        {%- set lights = [states.light.dining_room, states.light.bedroom, states.switch.desk_lights_switch, states.light.bed_underlights, states.switch.christmas_lights] %}

        {% for state in lights if state.state == 'on' %}
          {% if loop.last %}
            {{loop.index}} 
          {% endif %}
        {% endfor %}

- platform: pi_hole
  monitored_conditions:
    - ads_blocked_today
    - ads_percentage_today
    - unique_clients

- platform: command_line
  name: Last Backup
  command: "cat /home/homeassistant/.homeassistant/lastbackup.txt"

- platform: command_line
  name: CPU Temperature
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "Â°C"
  value_template: '{{ (value | multiply(0.001)) | round(1) }}'