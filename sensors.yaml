- platform: speedtest 
  monitored_conditions:
    - download
  minute:
    - 1

- platform: darksky
  api_key: !secret darksky_key
  monitored_conditions:
    - summary
    - apparent_temperature

- platform: template
  sensors:
    secrets:
      value_template: "Secrets Container"
    fibaro_office_battery_level:
      unit_of_measurement: '%'
      value_template: "{{ states.zwave.office.attributes.battery_level | default(0) | int }}"
      icon_template: >
        {% set battery_level = states.zwave.office.attributes.battery_level | default(0) | int %}
        {% set battery_round = (battery_level / 10) |int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}
    fibaro_thomas_battery_level:
      unit_of_measurement: '%'
      value_template: "{{ states.zwave.thomas.attributes.battery_level  | default(0) | int  }}"
      icon_template: >
        {% set battery_level = states.zwave.thomas.attributes.battery_level | default(0) | int %}
        {% set battery_round = (battery_level / 10) |int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}
    lights_on_count:
      friendly_name: 'Lights On'
      value_template: >
        {%- set lights = [states.light.dining_room, states.light.bedroom, states.light.downstairs_toilet, states.light.hall, states.light.living_room_play_area, states.light.living_room_tv_area, states.switch.desk_lights_switch, states.switch.christmas_lights] %}
        {% for light in lights if light.state == 'on' %}
          {% if loop.last %}
            {{loop.index}} 
          {% endif %}
        {% endfor %}

- platform: command_line
  name: Last Backup
  command: "cat /home/homeassistant/.homeassistant/lastbackup.txt"

- platform: command_line
  name: CPU Temperature
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "Â°C"
  value_template: '{{ (value | multiply(0.001)) | round(1) }}'

- platform: command_line
  name: "HA Uptime"
  command: echo "$(($(date +%s) - $(date -d "$(head -n1 /home/hass/.homeassistant/home-assistant.log | cut -d' ' -f-2)" +%s)))"
  scan_interval: 720
  value_template: >-
    {% set uptime = value | int %}
    {% set seconds = uptime % 60 %}
    {% set minutes = ((uptime % 3600) / 60) | int %}
    {% set hours = ((uptime % 86400) / 3600) | int %}
    {% set days = (uptime / 86400) | int %}
    {%- if days > 0 -%}
      {%- if days == 1 -%}
        1 day
      {%- else -%}
        {{ days }} days
      {%- endif -%}
      {{ ', ' }}
    {%- endif -%}
    {{ '%02d' % hours }}:{{ '%02d' % minutes }}